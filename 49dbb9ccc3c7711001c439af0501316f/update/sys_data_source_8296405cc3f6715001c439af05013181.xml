<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_data_source">
    <sys_data_source action="INSERT_OR_UPDATE">
        <batch_size>1000</batch_size>
        <category/>
        <connection_override_last_success_time/>
        <connection_timeout>0</connection_timeout>
        <connection_url/>
        <connection_url_parameters/>
        <csv_delimiter/>
        <data_in_single_column>false</data_in_single_column>
        <data_loader><![CDATA[(function loadData(import_set_table) {

    var showGUID = new GlideRecord('u_plex_tv_seasons');
    showGUID.addEncodedQuery('u_active=true');
    showGUID.query();

    while (showGUID.next()) {

		var parentRec = showGUID.sys_id + '';

        var getRecordData = new sn_ws.RESTMessageV2('Plex', 'Child Objects');
        getRecordData.setStringParameterNoEscape('parentID', showGUID.u_key + '');

        var response = getRecordData.execute();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();

        if (response.haveError()) {
            return;
        }

        if (httpStatus == 200 || httpStatus == '200') {

            var recordData = JSON.parse(responseBody);
            processData(recordData.MediaContainer.Metadata, parentRec);
        }
    }

    function processData(recordData, parentRec) {

        for (var recordDataIdx = 0; recordDataIdx < recordData.length; recordDataIdx++) {

			var roleArray = [];

            var roleRaw = recordData[recordDataIdx].Role;

            for (var roleDataIdx = 0; roleDataIdx < roleRaw.length; roleDataIdx++) {

                roleArray.push(roleRaw[roleDataIdx].tag);

            }

            
            roleArray.join();

            var created = recordData[recordDataIdx].addedAt;
            var updated = recordData[recordDataIdx].updatedAt;
            var viewed = recordData[recordDataIdx].lastViewedAt;
            var duration = recordData[recordDataIdx].duration + '';

            min = Math.floor((duration / 1000 / 60) << 0);

            var cD = new Date(0); // The 0 there is the key, which sets the date to the epoch
            cD.setUTCSeconds(created);
            var gdtCreted = new GlideDateTime();

            var uD = new Date(0); // The 0 there is the key, which sets the date to the epoch
            uD.setUTCSeconds(updated);
            var gdtUpdated = new GlideDateTime();

            var vD = new Date(0); // The 0 there is the key, which sets the date to the epoch
            vD.setUTCSeconds(viewed);
            var gdtViwed = new GlideDateTime();


            var map = {

                u_key: recordData[recordDataIdx].ratingKey + '',
                u_title: recordData[recordDataIdx].title + '',
                u_guid: recordData[recordDataIdx].guid + '',
                u_type: recordData[recordDataIdx].type + '',
                u_contentRating: recordData[recordDataIdx].contentRating + '',
                u_summary: recordData[recordDataIdx].summary + '',
                u_audienceRating: recordData[recordDataIdx].audienceRating + '',
                u_viewCount: recordData[recordDataIdx].viewCount + '',
                u_lastViewedAt: gdtViwed + '',
                u_thumb: recordData[recordDataIdx].thumb + '',
                u_duration: min + '',
                u_originallyAvailableAt: recordData[recordDataIdx].originallyAvailableAt + '',
                u_addedAt: gdtCreted + '',
                u_updatedAt: gdtUpdated + '',
				u_parent: parentRec + '',
				u_role: roleArray + '',
				u_episodeNumber: recordData[recordDataIdx].index + '',
            };
            import_set_table.insert(map);
        }

    }

})(import_set_table);]]></data_loader>
        <database_name/>
        <database_port/>
        <discard_arrays>true</discard_arrays>
        <expand_node_children>false</expand_node_children>
        <file_path/>
        <file_retrieval_method>Attachment</file_retrieval_method>
        <format>CSV</format>
        <glide_keystore>false</glide_keystore>
        <header_row>0</header_row>
        <import_set_table_label>Plex Episode Import</import_set_table_label>
        <import_set_table_name>u_plex_episode_import</import_set_table_name>
        <instance_name/>
        <jdbc_password/>
        <jdbc_server/>
        <jdbc_user_name/>
        <jpath_root_node/>
        <last_run_database_field/>
        <last_run_datetime/>
        <last_success_import_time>2023-12-02 10:22:21</last_success_import_time>
        <ldap_target/>
        <ldapprobe_result_set_rows>200</ldapprobe_result_set_rows>
        <limit/>
        <maximum_rows/>
        <mid_server/>
        <name>Plex TV Episodes</name>
        <offset>0</offset>
        <oracle_port>1521</oracle_port>
        <oracle_sid>orcl</oracle_sid>
        <parsing_script><![CDATA[// The input value can be accessed through the variables named "line", "lineNumber" and "result"
// The function uses result variable to return parse result back. 
(function(line,lineNumber,result) {
	// add code here
})(line,lineNumber,result);]]></parsing_script>
        <properties/>
        <query>All Rows from Table</query>
        <query_timeout>0</query_timeout>
        <request_action/>
        <scp_authentication>Username and Password</scp_authentication>
        <scp_password/>
        <scp_port/>
        <scp_server/>
        <scp_user_name/>
        <sheet_number>0</sheet_number>
        <sql_statement/>
        <ssh_keyfile_path/>
        <support_pagination>false</support_pagination>
        <sys_class_name>sys_data_source</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-11-24 20:18:27</sys_created_on>
        <sys_id>8296405cc3f6715001c439af05013181</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>Plex TV Episodes</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="Plex">49dbb9ccc3c7711001c439af0501316f</sys_scope>
        <sys_update_name>sys_data_source_8296405cc3f6715001c439af05013181</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-06 20:43:22</sys_updated_on>
        <table_name/>
        <type>CUSTOM</type>
        <use_batch_import>false</use_batch_import>
        <use_integrated_authentication>false</use_integrated_authentication>
        <use_last_run_datetime>false</use_last_run_datetime>
        <xpath_root_node/>
        <zipped>false</zipped>
    </sys_data_source>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="Plex">49dbb9ccc3c7711001c439af0501316f</claim_owner_scope>
        <claim_timestamp>18c40def3640000001</claim_timestamp>
        <metadata_update_name>sys_data_source_8296405cc3f6715001c439af05013181</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>Plex</previous_claim_name>
        <previous_claim_scope>49dbb9ccc3c7711001c439af0501316f</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-06 20:43:22</sys_created_on>
        <sys_id>3cdfb584c30b711001c439af05013152</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-06 20:43:22</sys_updated_on>
    </sys_claim>
</record_update>
